

#include <iostream>
using namespace std;

class Subject{
public:
  virtual ~Subject(){
  }
  virtual void Request()=0;
};

class RealSubject : public Subject{　//実際のオブジェクト
  string s;
public:
  RealSubject(const char* msg){
    s=msg;
  }
  virtual ~RealSubject(){
  }
  void Request(){
    cout << s << endl;
  }
};

class Proxy : public Subject{　	//プロキシオブジェクト
  string s;
  RealSubject* rs;
public:
  Proxy(const char* msg){
    rs=0;
    s=msg;
  }

  virtual ~Proxy(){
    delete rs;
  }
  void Request(){
    if(rs==0){
      rs=new RealSubject(s.c_str());　	//この時点で作成
    }
    rs->Request();
  }
};

int main(void)
{
  Subject* aSubject=new Proxy("Message");
  aSubject->Request();
  aSubject->Request();

  delete aSubject;
}